name: CI

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  # ----------------------- TESTING AND LINTING -----------------------------
  test-and-lint:
    name: Test and Lint Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-deps
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-deps

      - name: Install npm dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Lint
        run: npx eslint

  # ----------------------- ANDROID & IOS -----------------------------
  build:
    name: Build App
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [22]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-deps
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-deps

      - name: Install npm dependencies
        run: npm install

      # Specific steps for each platform
      - if: matrix.os == 'ubuntu-latest'
        name: Build Android
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease -Pkeystore.password=${{ secrets.KEYSTORE_PASSWORD }}

      - if: matrix.os == 'macos-latest'
        name: Build iOS
        run: |
          cd ios
          xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' build
